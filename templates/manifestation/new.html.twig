{% extends 'base.html.twig' %}

{% block title %}新規書誌登録{% endblock %}

{% block body %}
    <div class="container py-4">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-success text-white">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mb-0 fs-4"><i class="fas fa-plus-circle me-2"></i>新規書誌登録</h2>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0 small">
                            <li class="breadcrumb-item"><a href="{{ path('app_home') }}" class="text-white">ホーム</a></li>
                            <li class="breadcrumb-item"><a href="{{ path('app_manifestation_index') }}" class="text-white">書誌一覧</a></li>
                            <li class="breadcrumb-item active text-white-50" aria-current="page">新規登録</li>
                        </ol>
                    </nav>
                </div>
            </div>

            <div class="card-body p-4">
                {{ include('manifestation/_form.html.twig', {'button_label': '登録する'}) }}
            </div>

            <div class="card-footer bg-light">
                <a href="{{ path('app_manifestation_index') }}" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i> 一覧に戻る
                </a>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .form-control:focus, .form-select:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .card {
            border-radius: 0.5rem;
            overflow: hidden;
        }

        .card-header {
            border-bottom: none;
        }

        .btn {
            border-radius: 0.3rem;
            padding: 0.5rem 1rem;
            font-weight: 500;
        }

        .breadcrumb-item + .breadcrumb-item::before {
            color: rgba(255, 255, 255, 0.6);
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // フォーム要素にフォーカスが当たった時の視覚的フィードバック
        document.addEventListener('DOMContentLoaded', function() {
            const formControls = document.querySelectorAll('.form-control, .form-select');
            formControls.forEach(element => {
                element.addEventListener('focus', function() {
                    this.closest('.mb-3').classList.add('was-validated');
                });
            });
        });
    </script>
{% endblock %}